name: Release

on:
  release:
    types: [published]

jobs:
  analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install flutter
        uses: subosito/flutter-action@master
        with:
          channel: stable

      - name: Format
        run: make format

      - name: Analyze
        run: make analyze

      - name: Install
        run: make install

      - name: Localizations
        run: make localizations

      - name: Test
        run: make test

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install flutter
        uses: subosito/flutter-action@master
        with:
          channel: stable

      - name: Install
        run: make install

      - name: Localizations
        run: make localizations

      - name: Test
        run: make test

  build_ios:
    runs-on: macos-latest
    needs: [test, analysis]
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      #
      # Install certificates
      #
      - name: "Import Certificate: Development"
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
          p12-password: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}

      - name: 'Download Provisioning Profiles'
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: 'com.canastro.flutterskeletonapp'
          profile-type: 'IOS_APP_STORE'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      #
      # Install & build app
      #
      - name: Install flutter
        uses: subosito/flutter-action@master
        with:
          channel: stable

      - name: Install
        run: make install

      - name: Localizations
        run: make localizations

      - name: Decrypt GoogleServices config
        working-directory: app/ios/Runner
        run: |
          gpg
            --quiet \
            --batch \
            --yes \
            --decrypt \
            --passphrase="$FIREBASE_ENCRYPT_SECRET" \
            --output GoogleService-Info.tar GoogleService-Info.tar.gpg
          tar xvf GoogleService-Info.tar

      - name: Build
        run: flutter build ios --verbose --release -t lib/main_prod.dart --build-name=${{ github.event.release.tag_name }}
        working-directory: app

      - name: Archive
        run: |
          xcodebuild \
            -workspace ./app/ios/Runner.xcworkspace \
            -config Release \
            -scheme Runner \
            -archivePath ./app/ios/build/flutterskeletonapp.xcarchive \
            -destination 'generic/platform=iOS' \
            archive

      - name: Xcode Export Archive
        run: |
          xcodebuild \
            -archivePath ./app/ios/build/flutterskeletonapp.xcarchive \
            -exportArchive \
            -exportPath ./ \
            -exportOptionsPlist ./app/ios/export-options.plist

      - name: 'Upload app to TestFlight'
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: 'flutterskeletonapp.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

  # build_android:
  #   runs-on: ubuntu-latest
  #   needs: [test, analysis]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     #
  #     # Install & build app
  #     #
  #     - name: Install flutter
  #       uses: subosito/flutter-action@master
  #       with:
  #         channel: stable

  #     - name: Install
  #       run: make install

  #     - name: Localizations
  #       run: make localizations

  #     - name: Decrypt GoogleServices config
  #       working-directory: app/android/app
  #       run: |
  #         gpg
  #           --quiet \
  #           --batch \
  #           --yes \
  #           --decrypt \
  #           --passphrase="$FIREBASE_ENCRYPT_SECRET" \
  #           --output google-services.tar google-services.tar.gpg
  #         tar xvf google-services.tar

  #     - name: Build
  #       run: flutter build android --verbose --release -t lib/main_prod.dart --build-name=${{ github.event.release.tag_name }} --dart-define SENTRY_DNS=${{ env.SENTRY_DNS }}
  #       working-directory: app

  # upload_to_slack:
  #   runs-on: ubuntu-latest
  #   needs: [build_ios, build_android]
  #   steps:
  #     - name: Notify slack
  #       uses: archive/github-actions-slack@v2.3.1
  #       id: notify
  #       with:
  #         slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_TOKEN }}
  #         slack-channel: app-release
  #         slack-text: ✨✨✨✨ A new version is published! See details of the changes <https://github.com/canastro/flutter_skeleton_app/releases/tag/${{ github.event.inputs.tag }}|here>

  bump_pubspec_version:
    runs-on: ubuntu-latest
    # needs: [build_ios, build_android]
    needs: [build_ios]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Setup dart
        uses: dart-lang/setup-dart@v1

      - name: Install Cider
        run: pub global activate cider

      - name: Bump version
        run: |
          git config --global user.email "bot@users.noreply.github.com"
          git config --global user.name "Bot"
          git remote add github "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
          git pull github main --ff-only
          cider version ${{ github.event.release.tag_name }}
        working-directory: app

      - name: Push bump
        run: |
          git add .
          if [ -z "$(git status --porcelain)" ]; then
            exit 0
          fi
          git commit -m "Bump to ${{ github.event.release.tag_name }}"
          git push github main
